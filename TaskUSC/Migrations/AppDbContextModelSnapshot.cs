// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaskUSC.DatabaseContexts;

#nullable disable

namespace TaskUSC.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.4");

            modelBuilder.Entity("TaskUSC.Models.ColdWater", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Cost")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("MeteringDeviceReadings")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Volume")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ColdWater");
                });

            modelBuilder.Entity("TaskUSC.Models.ElectricPower", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("CostDay")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("CostNight")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("MeteringDeviceReadingsDay")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("MeteringDeviceReadingsNight")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("VolumeDay")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("VolumeNight")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ElectricPower");
                });

            modelBuilder.Entity("TaskUSC.Models.HeatCarrier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Cost")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("MeteringDeviceReadings")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Volume")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("HeatCarrier");
                });

            modelBuilder.Entity("TaskUSC.Models.ThermalEnergy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Cost")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Volume")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ThermalEnergy");
                });

            modelBuilder.Entity("TaskUSC.Models.UtilitiesData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CountResidents")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ElectricPowerId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("HeatCarrierId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ThermalEnergyId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("СoldWaterId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ElectricPowerId");

                    b.HasIndex("HeatCarrierId");

                    b.HasIndex("ThermalEnergyId");

                    b.HasIndex("СoldWaterId");

                    b.ToTable("UtilitiesData");
                });

            modelBuilder.Entity("TaskUSC.Models.UtilitiesData", b =>
                {
                    b.HasOne("TaskUSC.Models.ElectricPower", "ElectricPower")
                        .WithMany()
                        .HasForeignKey("ElectricPowerId");

                    b.HasOne("TaskUSC.Models.HeatCarrier", "HeatCarrier")
                        .WithMany()
                        .HasForeignKey("HeatCarrierId");

                    b.HasOne("TaskUSC.Models.ThermalEnergy", "ThermalEnergy")
                        .WithMany()
                        .HasForeignKey("ThermalEnergyId");

                    b.HasOne("TaskUSC.Models.ColdWater", "СoldWater")
                        .WithMany()
                        .HasForeignKey("СoldWaterId");

                    b.Navigation("ElectricPower");

                    b.Navigation("HeatCarrier");

                    b.Navigation("ThermalEnergy");

                    b.Navigation("СoldWater");
                });
#pragma warning restore 612, 618
        }
    }
}
